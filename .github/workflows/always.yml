name: verify
on: 
  push:
  schedule:
    - cron: '0 0 * * *'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: ls
        run: ls -la

      - name: setup node
        uses: actions/setup-node@v3
        with:
          node-version: '16.15.X'
      - name: setup
        run: npm run setup:ci --if-present
      - name: npm install
        run: npm ci
      - name: node_modules
        run: ls -la ./node_modules
      - name: npm audit
        run: npm audit
        continue-on-error: true # XXX?

      - name: lint
        run: npm run lint

      - name: react build
        run: npx react-scripts build
      - name: build.zip
        uses: actions/upload-artifact@v3
        with:
          name: build
          path: build

      - name: electron-forge package
        run: npx electron-forge package


  builds:
    if: github.ref == 'refs/heads/main'
    needs: build
    strategy:
      max-parallel: 6
      matrix:
        os: [ubuntu-latest, macOS-latest, windows-latest]
        node: [16, 18]
    runs-on: ${{ matrix.os }}
    name: build @ node:${{ matrix.node }}@${{ matrix.os }}
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: setup node
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}

      - name: setup
        run: npm run setup:ci --if-present
      - name: npm install
        run: npm ci

      - name: react build
        run: npm run build


  electron: # FIXME? takes 8min+
    if: github.ref == 'refs/heads/main'
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v3

      - name: setup node
        uses: actions/setup-node@v3
        with:
          node-version: 16
      - name: setup
        run: npm run setup:ci --if-present
      - name: npm install
        run: npm install
      - name: build.zip
        uses: actions/download-artifact@v3
        with:
          name: build
          path: build
      - name: ls
        run: ls -la

      - name: electron-forge make
        run: npx electron-forge make
# FIXME
#     - name: out.zip
#       uses: actions/upload-artifact@v3
#       with:
#         name: out
#         path: out


  CodeQL:
#   if: github.ref == 'refs/heads/main' # TODO?
    needs: build
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write

    strategy:
      fail-fast: false
      matrix:
        language: ['javascript']

    name: 'CodeQL: ${{ matrix.language }}'
    steps:
    - name: checkout
      uses: actions/checkout@v3
    - name: setup CodeQL
      uses: github/codeql-action/init@v2
      with:
        languages: ${{ matrix.language }}
    - name: build.zip
      uses: actions/download-artifact@v3
      with:
        name: build
        path: build

    - name: CodeQL
      uses: github/codeql-action/analyze@v2
